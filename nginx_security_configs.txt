###Nginx Hardening Configs by f3lp1s###

# Desative todos os módulos nginx indesejados.
./configure --without-http_autoindex_module
make
make install

# Anti DDOS configs
# Use esta diretiva para especificar o tamanho do buffer do corpo da solicitação do cliente. O valor padrão é o 8k ou 16k, mas recomenda-se definir esta tão baixo quanto 1k:
client_body_buffer_size 1k
# Use esta diretiva para especificar o tamanho do buffer do cabeçalho para o cabeçalho da solicitação do cliente. Um tamanho de buffer de 1k é adequado para a maioria das solicitações.
client_header_buffer_size
# Use esta diretiva para especificar o tamanho máximo do corpo aceito para uma solicitação do cliente. Uma diretiva 1k deve ser suficiente, mas você precisa aumentá-la se estiver recebendo uploads de arquivos por meio do método POST.
client_max_body_size
# Use esta diretiva para especificar o número máximo e o tamanho dos buffers a serem usados ??para ler grandes cabeçalhos de solicitação do cliente. Esta diretiva aceitará URI de dados de 2 kB.
large_client_header_buffers

# Desative todos os métodos HTTP indesejados
location / {
limit_except GET HEAD POST { deny all; }
}
# Outra abordagem é adicionar a seguinte condição à seção do servidor (ou bloco do servidor). Pode ser considerado mais universal, mas você deve ter cuidado com as "if" declarações no contexto do local.
if ($request_method !~ ^(GET|HEAD|POST)$ ) {
    return 444; }

# Definir e configurar o acesso nginx e registros de erros
error_log logs/error.log crit;

# Não exibir o número da versão nginx nas páginas de erro e no cabeçalho do servidor.
server_tokens off;

# Config para não permitir que o navegador renderize a página dentro de um frame ou iframe e evitar ataque clickjacking.
add_header X-Frame-Options SAMEORIGIN;

# Ao publicar conteúdo fornecido pelo usuário, inclua um cabeçalho X-Content-Type-Options: nosniff junto com o cabeçalho Content-Type: Para desativar a detecção de tipo de conteúdo em alguns navegadores.
add_header X-Content-Type-Options nosniff;

# Este cabeçalho habilita o filtro Cross-site scripting (XSS) integrado aos navegadores mais recentes.
add_header X-XSS-Protection "1; mode=block";

# Com a Política de segurança de conteúdo (CSP) ativada e um navegador que a suporta, Você pode dizer ao navegador que ele só pode baixar conteúdo de domínios que você permitir explicitamente
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com https://assets.zendesk.com https://connect.facebook.net; img-src 'self' https://ssl.google-analytics.com https://s-static.ak.facebook.com https://assets.zendesk.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://assets.zendesk.com; font-src 'self' https://themes.googleusercontent.com; frame-src https://assets.zendesk.com https://www.facebook.com https://s-static.ak.facebook.com https://tautt.zendesk.com; object-src 'none'";

# Redirecionar todo o tráfego http para https.
server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name .seudominio.com;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name .seudominio.com;

  ssl_certificate /etc/nginx/ssl/seudominio.crt;
  ssl_certificate_key /etc/nginx/ssl/seudominio_com.key;

  # Habilite o reinício da sessão para melhorar o desempenho do https.
  ssl_session_cache shared:SSL:50m;
  ssl_session_timeout 1d;
  ssl_session_tickets off;

  # Parâmetro Diffie-Hellman para conjuntos de criptografia DHE, recomendado 2048 bits.
  ssl_dhparam /etc/nginx/ssl/dhparam.pem;

  # Permite proteção do lado do servidor contra ataques BEAST.
  ssl_prefer_server_ciphers on;
  # Desative SSLv3 (ativado por padrão desde nginx 0.8.19), pois é menos seguro que TLS.
  ssl_protocols TLSv1.2 TLSv1.3;
  # Cifras escolhidas para envio de sigilo e compatibilidade.
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

  # Habilite o grampeamento OSCP (mecanismo pelo qual um site pode transmitir informações de revogação de certificado aos visitantes de maneira escalonável e com preservação da privacidade).
  resolver 8.8.8.8 8.8.4.4;
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/nginx/ssl/seudominio.crt;

  # Config para ativar HSTS (HTTP Strict Transport Security) para evitar a remoção de SSL.
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

  # ... O restante de sua configuração
}
